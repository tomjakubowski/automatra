{"name":"automatra","body":"# automatra\r\nan elementary cellular automata web service built on Sinatra\r\n\r\n## usage\r\n\r\n- `GET /:N.json` return a JSON-formatted trajectory of a rule `:N` automaton.\r\n- `GET /:N.png` returns a PNG representation of a rule `:N` automaton.\r\n- `GET /:N.txt` returns a plain-text representation of a rule `:N` automaton.\r\n\r\nseveral `GET` parameters are available:\r\n\r\n- `width=...` the number of cells in the model. takes an integer. defaults to 128. cannot be greater than 512.\r\n- `initial=...` initial cellular state. can be either an integer, \"random\" for a random initial state, or \"centered\" for one 'on' cell surrounded by 'off' cells.\r\n- `steps=...` the number of states to generate. takes an integer. usually, this should be the same as width. defaults to the model width. cannot be greater than 512.\r\n\r\nfor example, to generate a 512x512 PNG image of a rule 110 automaton with random input:\r\n    GET /110.png?width=512&steps=512&initial=random\r\n\r\n## contact\r\n\r\nautomatra was written by [Tom Jakubowski][crystae]. the source for automatra is available\r\non [GitHub][github], and a demonstration is running at [http://automatra-demo.herokuapp.com][demo].\r\n\r\n[crystae]: http://crystae.net\r\n[github]: http://github.com/tomjakubowski/automatra/\r\n[demo]: http://automatra-demo.herokuapp.com/","tagline":"an elementary cellular automata web service built on Sinatra  ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}